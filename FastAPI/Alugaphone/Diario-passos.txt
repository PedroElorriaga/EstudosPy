Dia 01

- Criei o ambiente virtual env-aluga
- Instalei o poetry e setuoptools no ambiente
- Iniciei o poetry dentro da estrutura
- Instalei as dependencias e bibliotecas usando poetry
- Configurei as ferramentas no arquivo .toml
- Criei a primeira rota '/' no arquivo app.py
- Criei o arquivo de schemas do projeto e configurei o PhonesStocks
- Criei o arquivo databases para criar a sessão com banco de dados
- Criei o arquivo settings para colocar as configurações do env em uma classe e ser instanciada quando preciso
- Criei o arquivo models e inseri a informação da tabela da base de dados do Phone Stocks
- Criei o arquivo conftest e configurei as fixtures client e session para efetuar futuros testes


Dia 02

- Criei o arquivo test_database.py para colocar os testes do banco de dados
- Ajustei as instalações do sqlalchemy, pydantic-settings e alembic no poetry, usando o poetry add
- Inicializei o alembic 


Dia 03

- Ajustei o migrations/env para o alembic acessar nossas configurações
- Travei um pouco nesta configuração, pois não tinha instanciado o config na hora de passar o env
- Testes funcionaram corretamente


DIA 04
alembic revision --autogenerate -m "create users table"
- Verifiquei a database.db utilizando o sqlite3 no cmd
- Apliquei a migração para o banco de dados utilizando o alembic, usando "alembic upgrade head"
- Criei um get no routes/phones.py
- Criei um novo schema que carrega uma lista do schema phonestocks
- Inclui o router na instancia do app
- Tentei rodar o teste do get, mas sem sucesso, me retornou somente assert status code 422


DIA 05

- Após varias tentativas, o erro estava em routes/phones, onde eu não tinha injetado as dependências (Depends)
- Testes funcionaram corretamente


DIA 06

- Criei a rota de post em routes/phones.py, para criar incluir o aparelho na database
- Testes funcionaram corretamente


DIA 07 

- Criei a rota de put em routes/phones.py, para atualizar um aparelho existente na database
- Instalei o factory_boy no pip e adicionei no poetry
- Criei uma classe para configurar o factory_boy com meu modelo do models.PhoneStock
- Criei uma fixture em conftests para criar um phone na base de dados
- Testes funcionaram corretamente


DIA 08

- Criei a rota de delete em routes/phones.py, para deletar um aparelho existente na database
- Criei um novo Schema chamado Message, onde carrega um json contendo uma mensagem
- Atualizei o response_model do method post e carreguei o Message, assim como no delete
- Testes funcionaram corretamente


DIA 09

- Criei testes para todos os methods no intuito de retornar os erros
- Testes funcionaram corretamente


DIA 10

- Alterei o nome de schemas/schema.py para schema/phone_schema.py
- Criei um novo schemas/user_schema.py e uma nova rota em routes/users.py
- Adicionei o modelo da base em models.py, para receber os users
- Criei um method get para buscar todos os usuarios existentes 
- Fiz criei a migração usando o alembic com o seguinte comando, alembic revision --autogenerate -m "create_users_table"
- Fiz a atualização do schema na base de dados com o seguinte comando, alembic upgrade head
- Inclui o router de users em app.py
- Criei o teste para o method get de users
- Testes funcionaram corretamente
- Criei um user factory em conftest, para simular um usuario
- Criei o method post em routes e criei o teste de criação de usuário na base de dados
- Testes funcionaram corretamente


DIA 11 

- Criei um method put para atualizar os usuarios existentes
- Criei uma nova classe um user_schema, onde carrega o schema de updates
- Fiz um novo teste para rodar um update de um usuario existente
- Criado method delete para deletar usuarios existentes e testes para o mesmo
- Testes funcionaram corretamente
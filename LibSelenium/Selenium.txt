# AUTOMAÇÕES PARA WEB

OBS: VERSÃO v4.0.0 PRA CIMA NÃO PRECISA ESPECIFICAR O CHROMEDRIVER


1 - Escolhemos o sistema operacional e o navegador que iremos operar

2 - Baixe o driver compativel, e coloque o .exe na pasta de drivers

3 - Inicialize seu ambiente virutal e instale o selenium:

** pip install selenium **

4 - No arquivo main, importe o webdriver do selenium
** from selenium import webdriver **

5 - Instancie o webdriver com o navegador escolhido
Ex: webdriver.chrome()

# Lista de chrome options 
https://peter.sh/experiments/chromium-command-line-switches/

# Doc de localizar elementos HTML
https://selenium-python.readthedocs.io/locating-elements.html


6 - Podemos usar o exemplo de inicialização que fiz no exemple.py



CURIOSIDADES:

from selenium.webdriver.common.by import By -> É utilizado para selecionar
elementos HTML com o driver


from selenium.webdriver.common.keys import Keys -> É utilizado para pressionar
teclas como por exemplo Keys.ENTER que aperta o enter do teclado


from selenium.webdriver.support.wait import WebDriverWait -> É utilizado
para fazer com que o bloco de busca aguarde uma página dinamica carregar
e é utlizado junto com o 
from selenium.webdriver.support import expected_conditions as EC
Primeiro ele executa o bloco que está abaixo dele, ex: 

element = driver.find_element(By.NAME, self.locator)
Caso ele não encontre, ai sim ele (WebDriverWait) é executado


from selenium.webdriver.common.action_chains import ActionChains -> É usado
para utilizar hotkeys, exemplo CTRL + C


from selenium.webdriver.support.ui import Select -> É utilizado para quando
é necessario usar um select/option de uma página, ex:

select_element = driver.find_element(By.NAME, 'selectomatic')
select = Select(select_element)



Alguns comandos:

driver.back() -> Volta uma página na navegação

driver.get('URL') -> Acessa o link selecionado

driver.execute_script('window.open("URL");') -> Abre um novo link em uma nova guia

driver.execute_script('window.stop();') -> Para de recarregar a página

driver.switch_to.window(driver.window_handles[0]) -> Troca de guia

driver.get_attribute('atributo') -> Pega o atributo de uma HTML

driver.refresh() -> Recarrega a página

driver.execute_script("arguments[0].scrollIntoView();", elements[0]) -> Roda scroll até vizualizar o elemento

driver.execute_script("arguments[0].click();", elements[0]) -> Click utilizando JS




Exceptions comuns:

https://www.browserstack.com/guide/exceptions-in-selenium-webdriver?utm_source=google&utm_medium=cpc&utm_platform=paidads&utm_content=645400465181&utm_campaign=Search-DSA-NB-T2Geo-Exp&utm_campaigncode=Guide-Page+1031549&utm_term=+&gad_source=1&gclid=Cj0KCQiAy9msBhD0ARIsANbk0A8_KOsae2X_S1j-N3xpfb2BXREfwBMo4TCMPjgStf2UrWMNw9-1y0oaAtNPEALw_wcB